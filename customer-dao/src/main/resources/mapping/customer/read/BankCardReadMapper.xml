<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pzj.core.customer.read.BankCardReadMapper">

    <!-- 所有字段 -->
    <sql id="Base_Column_List">
        id,
        owner_id,
        account_holder,
        id_num,
        bank,
        card_num,
        data_source,
        create_by,
        create_date,
        update_by,
        update_date
    </sql>

    <!-- 字段映射 -->
    <resultMap id="BaseResultMap" type="com.pzj.core.customer.profile.BankCardEntity">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="owner_id" property="ownerId" jdbcType="BIGINT" />
        <result column="account_holder" property="accountHolder" jdbcType="VARCHAR" />
        <result column="id_num" property="idNum" jdbcType="VARCHAR" />
        <result column="bank" property="bank" jdbcType="VARCHAR" />
        <result column="card_num" property="cardNum" jdbcType="VARCHAR" />
        <result column="data_source" property="dataSource" jdbcType="BIGINT" />
        <result column="create_by" property="createBy" jdbcType="BIGINT" />
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
        <result column="update_by" property="updateBy" jdbcType="BIGINT" />
        <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    </resultMap>

    <!-- 主键查询 -->
    <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select <include refid="Base_Column_List" /> from bank_card  where
        id = #{id, jdbcType=BIGINT}
    </select>

    <!-- 主键查询 -->
    <select id="selectByOwnerId" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select <include refid="Base_Column_List" /> from bank_card where owner_id = #{ownerId, jdbcType=BIGINT}
    </select>

    <!-- 具有表别名的通用查询条件 -->
    <sql id="sql_of_where_alias">
        <if test="param != null">
            <if test="param.id != null"> AND a.id = #{param.id, jdbcType=BIGINT}</if>
            <if test="param.ownerId != null"> AND a.owner_id = #{param.ownerId, jdbcType=BIGINT}</if>
            <if test="param.accountHolder != null"> AND a.account_holder like #{param.accountHolder, jdbcType=VARCHAR}</if>
            <if test="param.idNum != null"> AND a.id_num = #{param.idNum, jdbcType=VARCHAR}</if>
            <if test="param.bank != null"> AND a.bank = #{param.bank, jdbcType=VARCHAR}</if>
            <if test="param.cardNum != null"> AND a.card_num = #{param.cardNum, jdbcType=VARCHAR}</if>
            <if test="param.createBy != null"> AND a.create_by = #{param.createBy, jdbcType=BIGINT}</if>
            <if test="param.createDateBegin != null"> AND a.create_date >= #{param.createDateBegin, jdbcType=TIMESTAMP}</if>
            <if test="param.createDateEnd != null"><![CDATA[
              AND a.create_date <= #{param.createDateEnd, jdbcType=TIMESTAMP}
            ]]></if>
        </if>
    </sql>

    <!-- 通用分页查询 -->
    <select id="queryByParam" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from bank_card a
        <where>
            <include refid="sql_of_where_alias" />
        </where>
        <if test="page != null">
            <if test="page.orderByClause == null"> order by a.id desc </if>
            <if test="page.orderByClause != null"> order by ${page.orderByClause} </if>
            <if test="page.startIndex != null and page.pageSize != null">
                limit #{page.startIndex} , #{page.pageSize}
            </if>
        </if>
    </select>

    <!-- 通用分页查询记录总数 -->
    <select id="countByParam" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(a.id) from bank_card a
        <where>
            <include refid="sql_of_where_alias" />
        </where>
    </select>



</mapper>